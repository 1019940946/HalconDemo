<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="13.0">
<procedure name="main">
<interface/>
<body>
<c>* </c>
<c>*    GS1 DataBar Expanded Stacked bar code symbology</c>
<c>* </c>
<c>* Create a bar code reader</c>
<l>create_bar_code_model (['element_size_max','element_size_min'], [16,1.5], BarCodeHandle)</l>
<c>* </c>
<c>* Initialization</c>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, 512, 512, 'black', WindowHandle)</l>
<l>dev_set_draw ('margin')</l>
<l>dev_set_color ('green')</l>
<l>dev_set_line_width (3)</l>
<l>set_display_font (WindowHandle, 14, 'mono', 'true', 'false')</l>
<c>* </c>
<c>* Read bar codes</c>
<l>for Ind := 1 to 2 by 1</l>
<l>    ImageName := 'barcode/gs1databar_expanded_stacked/gs1databar_expanded_stacked_' + (Ind$'.2')</l>
<l>    read_image (Image, ImageName)</l>
<l>    dev_resize_window_fit_image (Image, 0, 0, -1, -1)</l>
<l>    dev_display (Image)</l>
<l>    find_bar_code (Image, SymbolRegions, BarCodeHandle, 'GS1 DataBar Expanded Stacked', DecodedDataStrings)</l>
<l>    dev_display (SymbolRegions)</l>
<l>    disp_message (WindowHandle, DecodedDataStrings, 'window', 12, 12, 'black', 'true')</l>
<l>    if (Ind &lt; 2)</l>
<l>        disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>        stop ()</l>
<l>    endif</l>
<l>endfor</l>
<c>* </c>
<c>* Release memory allocated by the bar code reader</c>
<l>clear_bar_code_model (BarCodeHandle)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
