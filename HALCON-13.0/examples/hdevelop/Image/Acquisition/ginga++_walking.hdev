<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="13.0">
<procedure name="main">
<interface/>
<body>
<c>* </c>
<c>* Example for the usage of a LinX GINGA++ frame grabber board</c>
<c>* (continuous grabbing mode)</c>
<c>* </c>
<l>dev_error_var (Error, 1)</l>
<l>dev_set_check ('~give_error')</l>
<c>* </c>
<l>MyCameraType := 'sony/XC55_NI_NORM'</l>
<l>* MyCameraType := 'jai/CVM40_NI_NORM'</l>
<l>MyBoardType := 'GINGA++M2'</l>
<l>* MyBoardType := 'GINGA++M4'</l>
<c>* </c>
<l>open_framegrabber ('Ginga++', 1, 1, 0, 0, 0, 0, 'default', -1, 'default', -1, 'default', MyCameraType, MyBoardType, 0, -1, AcqHandle)</l>
<c>* </c>
<l>NumBuffers := 50</l>
<l>set_framegrabber_param (AcqHandle, 'num_buffers', NumBuffers)</l>
<l>set_framegrabber_param (AcqHandle, 'continuous_grabbing', 'enable')</l>
<l>set_framegrabber_param (AcqHandle, 'overwrite_method', 'abort')</l>
<l>set_framegrabber_param (AcqHandle, 'ring_buffer_stop_margin', 2)</l>
<c>* </c>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, 640, 480, 'black', WindowHandle)</l>
<l>dev_update_pc ('off')</l>
<l>dev_update_time ('off')</l>
<l>dev_update_var ('off')</l>
<l>dev_update_window ('off')</l>
<l>stop ()</l>
<l>dev_set_check ('~give_error')</l>
<l>grab_image_start (AcqHandle, -1)</l>
<l>Entering := 1</l>
<l>while (Entering == 1)</l>
<l>    grab_image_async (Image, AcqHandle, -1)</l>
<l>    if (Error != H_MSG_TRUE)</l>
<c>        * abort continuous grabbing</c>
<l>        dev_set_check ('give_error')</l>
<l>        stop ()</l>
<l>        set_framegrabber_param (AcqHandle, 'continuous_grabbing', 'disable')</l>
<l>        get_framegrabber_param (AcqHandle, 'ring_buffer_current_index', CurrentIndex)</l>
<l>        get_framegrabber_param (AcqHandle, 'ring_buffer_last_index', LastIndex)</l>
<l>        set_framegrabber_param (AcqHandle, 'walk_ring_buffer', 'enable')</l>
<c>        * </c>
<l>        Pool := LastIndex - CurrentIndex</l>
<l>        get_framegrabber_param (AcqHandle, 'ring_buffer_stop_margin', StopMargin)</l>
<l>        if (Pool &lt; 0)</l>
<l>            Pool := NumBuffers - CurrentIndex + LastIndex</l>
<l>        endif</l>
<l>        stop ()</l>
<c>        * </c>
<l>        for i := 1 to Pool by 1</l>
<l>            grab_image (Image, AcqHandle)</l>
<l>            sobel_amp (Image, EdgeAmplitude, 'sum_abs', 3)</l>
<l>            dev_display (EdgeAmplitude)</l>
<l>        endfor</l>
<l>        set_framegrabber_param (AcqHandle, 'walk_ring_buffer', 'disable')</l>
<c>        * </c>
<l>        Entering := 0</l>
<l>    else</l>
<l>        sobel_amp (Image, EdgeAmplitude, 'sum_abs', 3)</l>
<l>        dev_display (EdgeAmplitude)</l>
<l>        wait_seconds (0.05)</l>
<l>    endif</l>
<l>endwhile</l>
<c>* </c>
<l>close_framegrabber (AcqHandle)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
