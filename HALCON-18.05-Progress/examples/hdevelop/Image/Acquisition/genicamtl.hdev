<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="18.05">
<procedure name="main">
<interface/>
<body>
<c>* </c>
<c>* Example for grabbing images via the GenICamTL interface</c>
<c>* (benchmark test)</c>
<c>* </c>
<c>* </c>
<l>info_framegrabber ('GenICamTL', 'general', GeneralInfo, GeneralInfoValues)</l>
<l>info_framegrabber ('GenICamTL', 'info_boards', BoardInfo, BoardInfoValues)</l>
<l>info_framegrabber ('GenICamTL', 'camera_types', CameraTypeInfo, CameraTypeInfoValues)</l>
<l>info_framegrabber ('GenICamTL', 'defaults', DefaultInfo, DefaultInfoValues)</l>
<l>info_framegrabber ('GenICamTL', 'parameters', ParameterInfo, ParameterInfoValues)</l>
<l>info_framegrabber ('GenICamTL', 'revision', RevisionInfo, RevisionValues)</l>
<c>* </c>
<l>MyColorSpace := 'default'</l>
<l>MyCameraType := 'default'</l>
<l>MyDevice := BoardInfoValues[0]</l>
<l>open_framegrabber ('GenICamTL', 1, 1, 0, 0, 0, 0, 'default', -1, MyColorSpace, -1, 'false', MyCameraType, MyDevice, -1, -1, AcqHandle)</l>
<c>* </c>
<c>* configure visualization</c>
<c>* </c>
<l>* set_framegrabber_param (AcqHandle, 'AcquisitionMode', 'Continuous')</l>
<l>grab_image (Image, AcqHandle)</l>
<l>get_image_size (Image, Width, Height)</l>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, Width, Height, 'black', WindowID)</l>
<l>dev_display (Image)</l>
<c>* </c>
<l>dev_update_window ('off')</l>
<l>dev_update_pc ('off')</l>
<l>dev_update_var ('off')</l>
<l>count_seconds (Seconds1)</l>
<l>grab_image_start (AcqHandle, -1)</l>
<l>for i := 1 to 100 by 1</l>
<l>    grab_image_async (Image, AcqHandle, -1)</l>
<l>endfor</l>
<c>* </c>
<l>count_seconds (Seconds2)</l>
<l>for i := 1 to 100 by 1</l>
<l>    sobel_amp (Image, EdgeAmplitude, 'sum_abs', 9)</l>
<l>endfor</l>
<c>* </c>
<l>count_seconds (Seconds3)</l>
<l>for i := 1 to 100 by 1</l>
<l>    grab_image_async (Image, AcqHandle, -1)</l>
<l>    sobel_amp (Image, EdgeAmplitude, 'sum_abs', 9)</l>
<l>endfor</l>
<c>* </c>
<l>count_seconds (Seconds4)</l>
<l>TimeGrab := (Seconds2 - Seconds1) / 100</l>
<l>TimeSobel := (Seconds3 - Seconds2) / 100</l>
<l>TimeAll := (Seconds4 - Seconds3) / 100</l>
<l>Overhead := TimeAll - TimeSobel</l>
<c>* </c>
<l>dev_update_window ('on')</l>
<l>dev_update_pc ('on')</l>
<l>dev_update_var ('on')</l>
<l>stop ()</l>
<c>* </c>
<l>while (1)</l>
<l>    grab_image_async (Image, AcqHandle, -1)</l>
<l>*     grab_image (Image, AcqHandle)</l>
<l>endwhile</l>
<l>stop ()</l>
<c>* </c>
<l>close_framegrabber (AcqHandle)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
