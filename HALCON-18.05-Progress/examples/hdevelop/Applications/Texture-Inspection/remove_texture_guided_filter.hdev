<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="18.05">
<procedure name="main">
<interface/>
<body>
<c>* This program shows how to separate foreground information</c>
<c>* from a disturbing background texture using a guided filter.</c>
<c>* </c>
<l>dev_update_off ()</l>
<l>dev_close_window ()</l>
<l>NumImages := 2</l>
<l>for Index := 1 to NumImages by 1</l>
<c>    * </c>
<c>    * Read and display the image</c>
<l>    read_image (Image, 'plan_' + Index$'02')</l>
<l>    dev_open_window_fit_image (Image, 0, 0, -1, -1, WindowHandle)</l>
<l>    set_display_font (WindowHandle, 14, 'mono', 'true', 'false')</l>
<l>    dev_display (Image)</l>
<l>    disp_message (WindowHandle, 'Original image', 'window', 12, 12, 'black', 'true')</l>
<l>    get_window_extents (WindowHandle, Row, Column, Width, Height)</l>
<l>    dev_open_window_fit_image (Image, 0, Width + 8, -1, -1, WindowHandle1)</l>
<l>    set_display_font (WindowHandle1, 14, 'mono', 'true', 'false')</l>
<l>    dev_open_window_fit_image (Image, 0, 2 * Width + 16, -1, -1, WindowHandle2)</l>
<l>    set_display_font (WindowHandle2, 14, 'mono', 'true', 'false')</l>
<c>    * </c>
<c>    * Apply the guided filter as rolling filter.</c>
<c>    * </c>
<c>    * If a black image is used as input with the original image</c>
<c>    * as guide, calling the guided filter iteratively leads to</c>
<c>    * the extraction of the image structure, e.g., the "coarse"</c>
<c>    * image information without texture.</c>
<l>    gen_image_proto (Image, ImageStructure, 0)</l>
<l>    for Index1 := 1 to 3 by 1</l>
<l>        guided_filter (Image, ImageStructure, ImageStructure, 1.5, 15)</l>
<l>    endfor</l>
<c>    * To get the texture, we subtract the structure image from the original.</c>
<l>    sub_image (Image, ImageStructure, ImageTexture, 1, 128)</l>
<c>    * </c>
<c>    * Display results</c>
<l>    dev_set_window (WindowHandle)</l>
<l>    dev_display (Image)</l>
<l>    disp_message (WindowHandle, 'Original image ' + Index, 'window', 12, 12, 'black', 'true')</l>
<l>    dev_set_window (WindowHandle1)</l>
<l>    dev_display (ImageStructure)</l>
<l>    disp_message (WindowHandle1, 'Filtered image', 'window', 12, 12, 'black', 'true')</l>
<l>    dev_set_window (WindowHandle2)</l>
<l>    dev_display (ImageTexture)</l>
<l>    disp_message (WindowHandle2, 'Extracted texture', 'window', 12, 12, 'black', 'true')</l>
<l>    if (Index &lt; NumImages)</l>
<l>        disp_continue_message (WindowHandle2, 'black', 'true')</l>
<l>        stop ()</l>
<l>        dev_close_window ()</l>
<l>        dev_close_window ()</l>
<l>        dev_close_window ()</l>
<l>    endif</l>
<l>endfor</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
