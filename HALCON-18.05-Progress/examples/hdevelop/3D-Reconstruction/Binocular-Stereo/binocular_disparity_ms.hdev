<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="18.05">
<procedure name="main">
<interface/>
<body>
<c>* This example program shows how to use binocular_disparity_ms</c>
<c>* to determine the disparities of the components on a PCB</c>
<c>* with different parameters.</c>
<l>dev_update_off ()</l>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, 672, 484, 'black', WindowHandle)</l>
<l>set_display_font (WindowHandle, 16, 'mono', 'true', 'false')</l>
<l>read_image (ImageL, 'stereo/board/board_l_01')</l>
<l>read_image (ImageR, 'stereo/board/board_r_01')</l>
<c>* The following camera and relative pose parameters were obtained with</c>
<c>* binocular_calibration.</c>
<l>gen_cam_par_area_scan_division (0.0130507774353, -665.817817207, 1.4803417027e-5, 1.48e-5, 155.89225769, 126.70664978, 320, 240, CamParamL)</l>
<l>gen_cam_par_area_scan_division (0.0131776504517, -731.860636733, 1.47997569293e-5, 1.48e-5, 162.98210144, 119.301040649, 320, 240, CamParamR)</l>
<l>create_pose (0.153573, -0.003734, 0.044735, 0.174289, 319.843388, 359.894955, 'Rp+T', 'gba', 'point', RelPose)</l>
<c>* Create the rectification maps from the calibration data.</c>
<l>gen_binocular_rectification_map (MapL, MapR, CamParamL, CamParamR, RelPose, 1, 'geometric', 'bilinear', RectCamParL, RectCamParR, CamPoseRectL, CamPoseRectR, RectLPosRectR)</l>
<c>* Rectify the images.</c>
<l>map_image (ImageL, MapL, ImageRectifiedL)</l>
<l>map_image (ImageR, MapR, ImageRectifiedR)</l>
<l>dev_clear_window ()</l>
<l>dev_display (ImageRectifiedL)</l>
<l>disp_message (WindowHandle, 'Left stereo image', 'window', 12, 12, 'black', 'true')</l>
<l>disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>stop ()</l>
<c>* Loop over some smoothing combinations of binocular_disparity_ms.</c>
<l>SurfaceSmoothing := [0,10,20,30,40,50,0,0,0,0,0,30]</l>
<l>EdgeSmoothing := [0,0,0,0,0,0,10,20,30,40,50,20]</l>
<l>for I := 0 to |SurfaceSmoothing| - 1 by 1</l>
<c>    * Compute the disparities.</c>
<l>    dev_clear_window ()</l>
<l>    binocular_disparity_ms (ImageRectifiedL, ImageRectifiedR, Disparity, Score, 20, 40, SurfaceSmoothing[I], EdgeSmoothing[I], [], [])</l>
<l>    dev_display (Disparity)</l>
<l>    disp_message (WindowHandle, 'SurfaceSmoothing: ' + SurfaceSmoothing[I] + '\nEdgeSmoothing:    ' + EdgeSmoothing[I], 'window', 12, 12, 'black', 'true')</l>
<l>    if (I &lt; |SurfaceSmoothing| - 1)</l>
<l>        disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>    endif</l>
<l>    stop ()</l>
<l>endfor</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
