<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="18.05">
<procedure name="main">
<interface/>
<body>
<c>* simple assignment of the result of an expression to a variable</c>
<l>Val := sin(1.2) + cos(1.2)</l>
<c>* </c>
<c>* assign a tuple to a variable</c>
<l>Tuple1 := [1,0,3,4,5,6,7,8,9]</l>
<c>* </c>
<c>* assign a value to a single element of a tuple</c>
<l>Tuple1[1] := 2</l>
<c>* </c>
<c>* assign one value to several tuple elements</c>
<l>Tuple1[1,3,5] := 'abc'</l>
<c>* </c>
<c>* assign several values to several tuple elements at the same time</c>
<l>Tuple1[0,4,8] := ['000','444','888']</l>
<c>* </c>
<c>* setting a value beyond the tuple's range will initialize the</c>
<c>* intermediate values</c>
<l>Tuple2[5] := 5</l>
<c>* </c>
<c>* initialize a tuple via a loop</c>
<l>dev_update_off ()</l>
<l>count_seconds (Tb)</l>
<l>Tuple3 := []</l>
<l>for i := 0 to 10000 by 1</l>
<l>    Tuple3[i] := i * i</l>
<l>endfor</l>
<l>count_seconds (Te)</l>
<l>T1 := Te - Tb</l>
<l>stop ()</l>
<c>* </c>
<c>* use a more efficient version of loop initialization</c>
<c>* which avoids the realocation of the tuple</c>
<l>count_seconds (Tb)</l>
<l>Tuple3 := gen_tuple_const(10001,0)</l>
<l>for i := 0 to 10000 by 1</l>
<l>    Tuple3[i] := i * i</l>
<l>endfor</l>
<l>count_seconds (Te)</l>
<l>T2 := Te - Tb</l>
<l>stop ()</l>
<c>* </c>
<c>* even better initialization without a loop by generating</c>
<c>* a tuple sequence</c>
<l>count_seconds (Tb)</l>
<l>Tuple3 := [0:10000]</l>
<l>Tuple3 := Tuple3 * Tuple3</l>
<l>count_seconds (Te)</l>
<l>T3 := Te - Tb</l>
<c>* </c>
<c>* other ways for initializing sequence tuples with different steps</c>
<l>Tuple4 := [3:0.1:5]</l>
<l>Tuple5 := [100:-10:-100]</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
