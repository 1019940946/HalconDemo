<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="12.0">
<procedure name="main">
<interface/>
<body>
<c>* this example shows how to detect mura defects</c>
<c>* in blurred images</c>
<c>* </c>
<l>dev_close_window ()</l>
<l>dev_update_off ()</l>
<l>Path := 'lcd/mura_defects_blur_'</l>
<l>read_image (Image, Path + '01')</l>
<l>get_image_size (Image, Width, Height)</l>
<l>dev_open_window_fit_size (0, 0, Width, Height, 640, 480, WindowHandle)</l>
<l>set_display_font (WindowHandle, 14, 'mono', 'true', 'false')</l>
<l>dev_set_draw ('margin')</l>
<l>dev_set_line_width (3)</l>
<l>dev_set_color ('red')</l>
<l>ScaleFactor := 0.4</l>
<l>calculate_lines_gauss_parameters (17, [25,3], Sigma, Low, High)</l>
<l>for f := 1 to 3 by 1</l>
<l>    read_image (Image, Path + f$'.2i')</l>
<l>    decompose3 (Image, R, G, B)</l>
<c>    * correct side illumination</c>
<l>    rft_generic (B, ImageFFT, 'to_freq', 'none', 'complex', Width)</l>
<l>    gen_gauss_filter (ImageGauss, 100, 100, 0, 'n', 'rft', Width, Height)</l>
<l>    convol_fft (ImageFFT, ImageGauss, ImageConvol)</l>
<l>    rft_generic (ImageConvol, ImageFFT1, 'from_freq', 'none', 'byte', Width)</l>
<l>    sub_image (B, ImageFFT1, ImageSub, 2, 100)</l>
<c>    * perform the actual inspection</c>
<l>    zoom_image_factor (ImageSub, ImageZoomed, ScaleFactor, ScaleFactor, 'constant')</l>
<c>    * avoid border effects when using lines_gauss()</c>
<l>    get_domain (ImageZoomed, Domain)</l>
<l>    erosion_rectangle1 (Domain, RegionErosion, 7, 7)</l>
<l>    reduce_domain (ImageZoomed, RegionErosion, ImageReduced)</l>
<l>    lines_gauss (ImageReduced, Lines, Sigma, Low, High, 'dark', 'true', 'gaussian', 'true')</l>
<l>    hom_mat2d_identity (HomMat2DIdentity)</l>
<l>    hom_mat2d_scale_local (HomMat2DIdentity, 1 / ScaleFactor, 1 / ScaleFactor, HomMat2DScale)</l>
<l>    affine_trans_contour_xld (Lines, Defects, HomMat2DScale)</l>
<c>    * </c>
<l>    dev_display (Image)</l>
<l>    dev_display (Defects)</l>
<l>    if (f &lt; 3)</l>
<l>        disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>        stop ()</l>
<l>    endif</l>
<l>endfor</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
