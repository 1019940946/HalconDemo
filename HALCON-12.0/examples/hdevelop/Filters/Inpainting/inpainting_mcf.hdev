<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="12.0">
<procedure name="main">
<interface/>
<body>
<c>* This example program shows how inpainting_mcf can be used to</c>
<c>* fill up the areas that cannot be reconstructed with stereo reconstruction,</c>
<c>* e.g., because of occlusions or missing texture.  You will see that</c>
<c>* inpainting_mcf creates a reconstruction with relatively sharp edges.</c>
<c>* </c>
<l>dev_update_off ()</l>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, 672, 484, 'black', WindowHandle)</l>
<l>set_display_font (WindowHandle, 16, 'mono', 'true', 'false')</l>
<c>* </c>
<c>* Display short description</c>
<l>Message := 'This program shows how inpainting_mcf can be used to'</l>
<l>Message[1] := 'fill up the areas that cannot be reconstructed'</l>
<l>Message[2] := 'with stereo reconstruction.'</l>
<l>disp_message (WindowHandle, Message, 'window', 12, 12, 'black', 'true')</l>
<l>disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>stop ()</l>
<c>* </c>
<c>* Set camera parameters</c>
<l>CamParamL := [0.0130507774353,-665.817817207,1.4803417027e-5,1.48e-5,155.89225769,126.70664978,320,240]</l>
<l>CamParamR := [0.0131776504517,-731.860636733,1.47997569293e-5,1.48e-5,162.98210144,119.301040649,320,240]</l>
<l>RelPose := [0.153573364258,-0.00373362231255,0.0447351264954,0.174289124775,319.843388114,359.894955219,0]</l>
<c>* Generate rectification map</c>
<l>gen_binocular_rectification_map (MapL, MapR, CamParamL, CamParamR, RelPose, 1, 'geometric', 'bilinear', RectCamParL, RectCamParR, CamPoseRectL, CamPoseRectR, RectLPosRectR)</l>
<c>* </c>
<c>* Read the stereo image pair, enhance the contrast and</c>
<c>* apply a general transformation to the image</c>
<l>read_image (ImageL, 'stereo/board/board_l_01')</l>
<l>read_image (ImageR, 'stereo/board/board_r_01')</l>
<l>emphasize (ImageL, ImageL, 7, 7, 1)</l>
<l>emphasize (ImageR, ImageR, 7, 7, 1)</l>
<l>map_image (ImageL, MapL, ImageRectifiedL)</l>
<l>map_image (ImageR, MapR, ImageRectifiedR)</l>
<c>* Determine the distance image.</c>
<l>binocular_distance (ImageRectifiedL, ImageRectifiedR, DistanceImage, ScoreImageDistance, RectCamParL, RectCamParR, RectLPosRectR, 'ncc', 17, 17, 5, 10, 40, 1, 0.1, 'left_right_check', 'interpolation')</l>
<c>* </c>
<c>* Before we can perform the inpainting with inpainting_mcf, we have</c>
<c>* to create suitable staring values.  This is performed with</c>
<c>* harmonic_interpolation.</c>
<c>* Determine the inpainting region.  It is given by the complement of the</c>
<c>* domain returned by binocular_distance.</c>
<l>get_domain (DistanceImage, Domain)</l>
<l>complement (Domain, RegionInpaintingFull)</l>
<c>* </c>
<c>* harmonic_interpolation intersects the region with the domain of the image.</c>
<c>* Since the inpainting region is the complement of the domain of the distance</c>
<c>* image the intersection would be empty.  Therefore, we have to use the full</c>
<c>* domain on the image to be inpainted.</c>
<l>full_domain (DistanceImage, DistanceImageFull)</l>
<l>harmonic_interpolation (DistanceImageFull, RegionInpaintingFull, HarmonicDistanceImage, 0.00001)</l>
<c>* </c>
<c>* We can now perform the inpainting with inpainting_mcf.  In contrast to</c>
<c>* harmonic_interpolation, the inpainting region must keep a slight distance</c>
<c>* to the border of the image.  Therefore, we clip the inpainting region.</c>
<l>get_image_size (DistanceImage, Width, Height)</l>
<l>clip_region (RegionInpaintingFull, RegionInpainting, 3, 3, Height - 4, Width - 4)</l>
<l>inpainting_mcf (HarmonicDistanceImage, RegionInpainting, InpaintedDistanceImage, 1, 0.5, 1000)</l>
<c>* </c>
<c>* Display the distance image and the dense distance image</c>
<l>dev_clear_window ()</l>
<l>dev_display (DistanceImage)</l>
<l>Message := 'Distance image'</l>
<l>disp_message (WindowHandle, Message, 'window', 12, 12, 'black', 'true')</l>
<l>disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>stop ()</l>
<l>dev_clear_window ()</l>
<l>dev_display (InpaintedDistanceImage)</l>
<l>Message := 'Dense distance image'</l>
<l>disp_message (WindowHandle, Message, 'window', 12, 12, 'black', 'true')</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
