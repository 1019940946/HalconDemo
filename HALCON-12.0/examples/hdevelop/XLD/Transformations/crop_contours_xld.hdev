<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="12.0">
<procedure name="main">
<interface/>
<body>
<c>* </c>
<c>* This example program shows how to use crop_contours_xld.</c>
<c>* </c>
<c>* </c>
<l>dev_close_window ()</l>
<l>read_image (Angio, 'angio-part')</l>
<l>get_image_size (Angio, Width, Height)</l>
<l>dev_open_window (0, 0, 3 * Width / 2, 3 * Height / 2, 'black', WindowID)</l>
<l>dev_set_part (0, 0, Height - 1, Width - 1)</l>
<c>* </c>
<c>* Preparation: Extract contours from an image.</c>
<l>lines_gauss (Angio, Lines, 2.3, 0.0, 0.7, 'dark', 'true', 'parabolic', 'true')</l>
<l>dev_display (Angio)</l>
<l>dev_set_color ('yellow')</l>
<l>dev_display (Lines)</l>
<l>stop ()</l>
<c>* </c>
<c>* Now reduce the image domain. The previously extracted contours</c>
<c>* are clipped accordingly (the original contours are displayed in gray).</c>
<c>* Note, that you have to expand the rectangle by 0.5 at each side, to</c>
<c>* make the clipped contours end at the pixel borders.</c>
<l>Top := 200</l>
<l>Left := 100</l>
<l>Bottom := 300</l>
<l>Right := 200</l>
<l>gen_rectangle1 (Rectangle, Top, Left, Bottom, Right)</l>
<l>reduce_domain (Angio, Rectangle, AngioReduced)</l>
<l>crop_contours_xld (Lines, LinesCropped, Top - 0.5, Left - 0.5, Bottom + 0.5, Right + 0.5, 'false')</l>
<l>dev_clear_window ()</l>
<l>dev_display (AngioReduced)</l>
<l>dev_set_color ('dim gray')</l>
<l>dev_display (Lines)</l>
<l>dev_set_color ('yellow')</l>
<l>dev_display (LinesCropped)</l>
<l>stop ()</l>
<c>* </c>
<l>dev_set_color ('white')</l>
<l>disp_arrow (WindowID, 198, 130, 153, 175, 1)</l>
<l>dev_open_window (25, 275, 300, 300, 'black', ZoomWindow)</l>
<l>dev_set_part (198, 126, 202, 130)</l>
<l>dev_display (AngioReduced)</l>
<l>dev_set_color ('dim gray')</l>
<l>dev_display (Lines)</l>
<l>dev_set_color ('yellow')</l>
<l>dev_display (LinesCropped)</l>
<l>stop ()</l>
<c>* </c>
<l>dev_set_window (ZoomWindow)</l>
<l>dev_close_window ()</l>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, 512, 512, 'black', WindowHandle)</l>
<c>* </c>
<c>* Closed input contours result again in closed output contours when the parameter</c>
<c>* CloseContours is set 'true'. In this case, the clipped contour segments are connected</c>
<c>* along the border of the clipping rectangle.</c>
<l>gen_rectangle1 (Rectangles, 200, 110, 300, 190)</l>
<l>gen_rectangle1 (Rectangle2, 200, 310, 300, 390)</l>
<l>union2 (Rectangles, Rectangle2, Rectangles)</l>
<l>gen_contour_polygon_xld (Contours, [170,330,330,170,170], [70,230,70,230,70])</l>
<l>gen_contour_polygon_xld (Contour2, [170,330,330,170,170], [270,430,270,430,270])</l>
<l>concat_obj (Contours, Contour2, Contours)</l>
<l>crop_contours_xld (Contours, CroppedContour1, 199.5, 109.5, 300.5, 190.5, 'false')</l>
<l>crop_contours_xld (Contours, CroppedContour2, 199.5, 309.5, 300.5, 390.5, 'true')</l>
<l>concat_obj (CroppedContour1, CroppedContour2, CroppedContours)</l>
<l>dev_clear_window ()</l>
<l>dev_set_color ('dim gray')</l>
<l>dev_display (Contours)</l>
<l>dev_display (Rectangles)</l>
<l>dev_set_color ('yellow')</l>
<l>dev_display (CroppedContours)</l>
<l>stop ()</l>
<c>* </c>
<c>* However, the parameter CloseContours influences only closed contours.</c>
<l>gen_contour_polygon_xld (Contours, [170,330,330,170], [70,230,70,230])</l>
<l>gen_contour_polygon_xld (Contour2, [170,330,330,170], [270,430,270,430])</l>
<l>concat_obj (Contours, Contour2, Contours)</l>
<l>crop_contours_xld (Contours, CroppedContour1, 199.5, 109.5, 300.5, 190.5, 'false')</l>
<l>crop_contours_xld (Contours, CroppedContour2, 199.5, 309.5, 300.5, 390.5, 'true')</l>
<l>concat_obj (CroppedContour1, CroppedContour2, CroppedContours)</l>
<l>dev_clear_window ()</l>
<l>dev_set_color ('dim gray')</l>
<l>dev_display (Contours)</l>
<l>dev_display (Rectangles)</l>
<l>dev_set_color ('yellow')</l>
<l>dev_display (CroppedContours)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
